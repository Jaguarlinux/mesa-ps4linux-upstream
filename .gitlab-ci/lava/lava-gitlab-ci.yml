variables:
  LAVA_SSH_CLIENT_IMAGE: "${CI_REGISTRY_IMAGE}/alpine/x86_64_lava_ssh_client:${ALPINE_X86_64_LAVA_SSH_TAG}--${MESA_TEMPLATES_COMMIT}"


.lava-test:
  # Cancel job if a newer commit is pushed to the same branch
  interruptible: true
  # The jobs themselves shouldn't actually run for an hour, of course.
  # Jobs are picked up greedily by a GitLab CI runner which is deliberately
  # overprovisioned compared to the number of available devices. They are
  # submitted to the LAVA co-ordinator with a job priority which gives
  # pre-merge priority over everyone else. User-submitted and nightly jobs
  # can thus spend ages just waiting around in a queue to be run at some
  # point as they get pre-empted by other things.
  # Non-queue time has strict timeouts for each stage, e.g. for downloading
  # the artifacts, booting the device, device setup, running the tests, etc,
  # which is handled by LAVA itself.
  # So the only reason we should see anyone bouncing off this timeout is due
  # to a lack of available devices to run the jobs.
  timeout: 1h
  variables:
    GIT_STRATEGY: none # testing doesn't build anything from source
    HWCI_TEST_SCRIPT: ./install/deqp-runner.sh
    FDO_CI_CONCURRENT: 6 # should be replaced by per-machine definitions
    # the dispatchers use this to cache data locally
    LAVA_HTTP_CACHE_URI: "http://caching-proxy/cache/?uri="
    # base system generated by the container build job, shared between many pipelines
    BASE_SYSTEM_HOST_PREFIX: "${S3_HOST}/${S3_KERNEL_BUCKET}"
    BASE_SYSTEM_MAINLINE_HOST_PATH: "${BASE_SYSTEM_HOST_PREFIX}/${FDO_UPSTREAM_REPO}/${LAVA_DISTRIBUTION_TAG}"
    BASE_SYSTEM_FORK_HOST_PATH: "${BASE_SYSTEM_HOST_PREFIX}/${CI_PROJECT_PATH}/${LAVA_DISTRIBUTION_TAG}"
    # per-job build artifacts
    JOB_ROOTFS_OVERLAY_PATH: "${JOB_ARTIFACTS_BASE}/job-rootfs-overlay.tar.gz"
    JOB_RESULTS_PATH: "${JOB_ARTIFACTS_BASE}/results.tar.zst"
    LAVA_S3_ARTIFACT_NAME: "mesa-${ARCH}-default-debugoptimized"
    S3_ARTIFACT_NAME: "mesa-python-ci-artifacts"
    S3_RESULTS_UPLOAD: "${JOB_ARTIFACTS_BASE}"
    PIGLIT_NO_WINDOW: 1
    VISIBILITY_GROUP: "Collabora+fdo"
  before_script:
    - !reference [.download_s3, before_script]
  script:
    - . artifacts/setup-test-env.sh
    - ./artifacts/lava/lava-submit.sh
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_JOB_NAME}"
    when: always
    paths:
      - results/
    exclude:
      - results/*.shader_cache
    reports:
      junit: results/junit.xml
  tags:
    - $RUNNER_TAG
  after_script:
    - curl -L --retry 4 -f --retry-connrefused --retry-delay 30 -s "https://${JOB_RESULTS_PATH}" | tar --warning=no-timestamp --zstd -x
  needs:
    - !reference [.required-for-hardware-jobs, needs]
    - job: alpine/x86_64_lava_ssh_client
      artifacts: false
    - job: debian/x86_64_pyutils
      artifacts: false
    - job: python-artifacts
      artifacts: false

.lava-x86_64-test:
  variables:
    ARCH: x86_64
    DEBIAN_ARCH: amd64
    KERNEL_IMAGE_NAME: bzImage
    KERNEL_IMAGE_TYPE: "zimage"
    BOOT_METHOD: u-boot
  extends:
    - .use-debian/x86_64_pyutils
    - .lava-test
  needs:
    - !reference [.lava-test, needs]
    - job: debian-testing
      artifacts: false

.lava-x86_64-test-gl:
  variables:
    LAVA_DISTRIBUTION_TAG: !reference [debian/x86_64_test-gl, variables, LAVA_DISTRIBUTION_TAG]
  extends:
    - .lava-x86_64-test
  needs:
    - !reference [.lava-x86_64-test, needs]
    - job: debian/x86_64_test-gl
      artifacts: false

.lava-x86_64-test-video:
  variables:
    LAVA_DISTRIBUTION_TAG: !reference [debian/x86_64_test-video, variables, LAVA_DISTRIBUTION_TAG]
  extends:
    - .lava-x86_64-test
  needs:
    - !reference [.lava-x86_64-test, needs]
    - job: debian/x86_64_test-video
      artifacts: false

.lava-x86_64-test-vk:
  variables:
    LAVA_DISTRIBUTION_TAG: !reference [debian/x86_64_test-vk, variables, LAVA_DISTRIBUTION_TAG]
  extends:
    - .lava-x86_64-test
  needs:
    - !reference [.lava-x86_64-test, needs]
    - job: debian/x86_64_test-vk
      artifacts: false

.lava-arm32-test:
  variables:
    ARCH: arm32
    DEBIAN_ARCH: armhf
    KERNEL_IMAGE_NAME: zImage
    KERNEL_IMAGE_TYPE: "zimage"
    BOOT_METHOD: u-boot
  extends:
    - .use-debian/x86_64_pyutils
    - .lava-test
  needs:
    - !reference [.lava-test, needs]
    - job: debian-arm32
      artifacts: false

.lava-arm32-test-gl:
  variables:
    LAVA_DISTRIBUTION_TAG: !reference [debian/arm32_test-gl, variables, LAVA_DISTRIBUTION_TAG]
  extends:
    - .lava-arm32-test
  needs:
    - !reference [.lava-arm32-test, needs]
    - job: debian/arm32_test-gl
      artifacts: false

.lava-arm64-test:
  variables:
    ARCH: arm64
    DEBIAN_ARCH: arm64
    KERNEL_IMAGE_NAME: Image
    KERNEL_IMAGE_TYPE: "image"
    BOOT_METHOD: u-boot
  extends:
    - .use-debian/x86_64_pyutils
    - .lava-test
  needs:
    - !reference [.lava-test, needs]
    - job: debian-arm64
      artifacts: false

.lava-arm64-test-gl:
  variables:
    LAVA_DISTRIBUTION_TAG: !reference [debian/arm64_test-gl, variables, LAVA_DISTRIBUTION_TAG]
  extends:
    - .lava-arm64-test
  needs:
    - !reference [.lava-arm64-test, needs]
    - job: debian/arm64_test-gl
      artifacts: false

.lava-arm64-test-vk:
  variables:
    LAVA_DISTRIBUTION_TAG: !reference [debian/arm64_test-vk, variables, LAVA_DISTRIBUTION_TAG]
  extends:
    - .lava-arm64-test
  needs:
    - !reference [.lava-arm64-test, needs]
    - job: debian/arm64_test-vk
      artifacts: false

.lava-piglit-traces:
  extends:
    - .test-piglit
  variables:
    HWCI_TEST_SCRIPT: "/install/piglit/piglit-traces.sh"
    # until we overcome Infrastructure issues, give traces extra 5 min before timeout
    DEVICE_HANGING_TIMEOUT_SEC: 600
    PIGLIT_REPLAY_DEVICE_NAME: "gl-${GPU_VERSION}"
    PIGLIT_RESULTS: "${GPU_VERSION}-replay"
  artifacts:
    reports:
      junit: results/junit.xml

.lava-x86_64-piglit-traces:
  extends:
    - .lava-x86_64-test-gl
    - .lava-piglit-traces

.lava-arm32-piglit-traces:
  extends:
    - .lava-arm32-test-gl
    - .lava-piglit-traces

.lava-arm64-piglit-traces:
  extends:
    - .lava-arm64-test-gl
    - .lava-piglit-traces
